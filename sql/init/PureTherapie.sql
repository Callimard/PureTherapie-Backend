-- MySQL Script generated by MySQL Workbench
-- Thu Mar 10 10:46:56 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema puretherapie
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `puretherapie` ;

-- -----------------------------------------------------
-- Schema puretherapie
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `puretherapie` DEFAULT CHARACTER SET utf8 ;
USE `puretherapie` ;

-- -----------------------------------------------------
-- Table `puretherapie`.`PersonOrigin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`PersonOrigin` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`PersonOrigin` (
  `idPersonOrigin` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idPersonOrigin`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Person` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Person` (
  `idPerson` INT NOT NULL AUTO_INCREMENT,
  `personType` VARCHAR(1) NOT NULL,
  `firstName` VARCHAR(255) NOT NULL,
  `lastName` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `gender` TINYINT(1) UNSIGNED NOT NULL,
  `birthday` DATE NULL,
  `phone` VARCHAR(20) NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `idPersonOrigin` INT NOT NULL,
  UNIQUE INDEX `uq_email` (`email` ASC) VISIBLE,
  UNIQUE INDEX `uq_phone` (`phone` ASC) VISIBLE,
  PRIMARY KEY (`idPerson`),
  INDEX `idx_first_last_name` (`firstName` ASC, `lastName` ASC) VISIBLE,
  INDEX `fk_person_person_origin` (`idPersonOrigin` ASC) VISIBLE,
  CONSTRAINT `fk_person_person_origin`
    FOREIGN KEY (`idPersonOrigin`)
    REFERENCES `puretherapie`.`PersonOrigin` (`idPersonOrigin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Client` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Client` (
  `idPerson` INT NOT NULL AUTO_INCREMENT,
  `photo` VARCHAR(255) NULL,
  `comment` TINYTEXT NULL,
  `technicalComment` TINYTEXT NULL,
  PRIMARY KEY (`idPerson`),
  CONSTRAINT `fk_client_person`
    FOREIGN KEY (`idPerson`)
    REFERENCES `puretherapie`.`Person` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Technician`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Technician` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Technician` (
  `idPerson` INT NOT NULL AUTO_INCREMENT,
  `speciality` VARCHAR(45) NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idPerson`),
  CONSTRAINT `fk_technician_person`
    FOREIGN KEY (`idPerson`)
    REFERENCES `puretherapie`.`Person` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`User` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`User` (
  `idPerson` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(25) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  PRIMARY KEY (`idPerson`),
  CONSTRAINT `fk_user_person`
    FOREIGN KEY (`idPerson`)
    REFERENCES `puretherapie`.`Person` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AestheticCare`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AestheticCare` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AestheticCare` (
  `idAestheticCare` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `price` DECIMAL(6,2) UNSIGNED NOT NULL,
  `executionTime` TINYINT UNSIGNED NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idAestheticCare`),
  UNIQUE INDEX `uq_name` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`AestheticCarePackage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AestheticCarePackage` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AestheticCarePackage` (
  `idAestheticCarePackage` INT NOT NULL AUTO_INCREMENT,
  `idAestheticCare` INT NOT NULL,
  `name` VARCHAR(35) NULL,
  `numberAestheticCare` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`idAestheticCarePackage`),
  INDEX `fk_aesthetic_care_package_aesthetic_care` (`idAestheticCare` ASC) VISIBLE,
  UNIQUE INDEX `uq_aesthetic_care_aesthetic_package_name` (`idAestheticCare` ASC, `name` ASC) VISIBLE,
  CONSTRAINT `fk_aesthetic_care_package_aesthetic_care`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Bundle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Bundle` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Bundle` (
  `idBundle` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(35) NOT NULL,
  `price` DECIMAL(6,2) UNSIGNED NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`idBundle`));


-- -----------------------------------------------------
-- Table `puretherapie`.`PaymentType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`PaymentType` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`PaymentType` (
  `idPaymentType` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idPaymentType`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Bill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Bill` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Bill` (
  `idBill` INT NOT NULL AUTO_INCREMENT,
  `basePrice` DECIMAL(6,2) UNSIGNED NOT NULL,
  `purchasePrice` DECIMAL(6,2) UNSIGNED NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `idClient` INT NOT NULL,
  `idPaymentType` INT NOT NULL,
  PRIMARY KEY (`idBill`),
  INDEX `fk_bill_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_bill_payment_type` (`idPaymentType` ASC) VISIBLE,
  CONSTRAINT `fk_bill_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bill_payment_type`
    FOREIGN KEY (`idPaymentType`)
    REFERENCES `puretherapie`.`PaymentType` (`idPaymentType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`BundlePurchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`BundlePurchase` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`BundlePurchase` (
  `idBundlePurchase` INT NOT NULL AUTO_INCREMENT,
  `idClient` INT NOT NULL,
  `idBundle` INT NOT NULL,
  `idBill` INT NOT NULL,
  PRIMARY KEY (`idBundlePurchase`),
  INDEX `fk_purchase_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_purchase_bundle` (`idBundle` ASC) VISIBLE,
  INDEX `fk_purchase_bill` (`idBill` ASC) VISIBLE,
  CONSTRAINT `fk_purchase_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_bundle`
    FOREIGN KEY (`idBundle`)
    REFERENCES `puretherapie`.`Bundle` (`idBundle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_bill`
    FOREIGN KEY (`idBill`)
    REFERENCES `puretherapie`.`Bill` (`idBill`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Stock` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Stock` (
  `idStock` INT NOT NULL AUTO_INCREMENT,
  `remainingQuantity` TINYINT UNSIGNED NOT NULL,
  `idAestheticCare` INT NOT NULL,
  `idBundlePurchase` INT NOT NULL,
  PRIMARY KEY (`idStock`),
  INDEX `fk_stock_aesthetic_care` (`idAestheticCare` ASC) VISIBLE,
  INDEX `fk_stock_bundle_purchase` (`idBundlePurchase` ASC) VISIBLE,
  UNIQUE INDEX `uq_purchase_aesthetic_care` (`idAestheticCare` ASC, `idBundlePurchase` ASC) VISIBLE,
  CONSTRAINT `fk_stock_aesthetic_care`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stock_bundle_purchase`
    FOREIGN KEY (`idBundlePurchase`)
    REFERENCES `puretherapie`.`BundlePurchase` (`idBundlePurchase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`MeansOfPayment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`MeansOfPayment` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`MeansOfPayment` (
  `idMeansOfPayment` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`idMeansOfPayment`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Payment` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Payment` (
  `idPayment` INT NOT NULL AUTO_INCREMENT,
  `amountPaid` DECIMAL(6,2) UNSIGNED NOT NULL,
  `paymentDate` DATETIME NOT NULL,
  `idBill` INT NOT NULL,
  `idMeansOfPayment` INT NOT NULL,
  `canceled` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_payment_bill` (`idBill` ASC) VISIBLE,
  INDEX `fk_Payment_means_of_payment` (`idMeansOfPayment` ASC) VISIBLE,
  CONSTRAINT `fk_payment_bill`
    FOREIGN KEY (`idBill`)
    REFERENCES `puretherapie`.`Bill` (`idBill`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payment_means_of_payment`
    FOREIGN KEY (`idMeansOfPayment`)
    REFERENCES `puretherapie`.`MeansOfPayment` (`idMeansOfPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`ClientArrival`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`ClientArrival` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`ClientArrival` (
  `idClientArrival` INT NOT NULL AUTO_INCREMENT,
  `arrivalDate` DATETIME NOT NULL,
  `idClient` INT NOT NULL,
  PRIMARY KEY (`idClientArrival`),
  INDEX `fk_client_arrival_client` (`idClient` ASC) VISIBLE,
  CONSTRAINT `fk_client_arrival_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Appointment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Appointment` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Appointment` (
  `idAppointment` INT NOT NULL AUTO_INCREMENT,
  `idAestheticCare` INT NOT NULL,
  `idClient` INT NOT NULL,
  `idTechnician` INT NOT NULL,
  `idClientArrival` INT NULL,
  `canceled` TINYINT(1) NOT NULL DEFAULT 0,
  `day` DATE NOT NULL,
  `time` TIME NOT NULL,
  `finalized` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idAppointment`),
  INDEX `fk_appointment_aesthetic_care` (`idAestheticCare` ASC) VISIBLE,
  INDEX `fk_appointment_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_appointment_client_arrival` (`idClientArrival` ASC) VISIBLE,
  INDEX `fk_appointment_technician` (`idTechnician` ASC) VISIBLE,
  CONSTRAINT `fk_appointment_aesthetic_care`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_client_arrival`
    FOREIGN KEY (`idClientArrival`)
    REFERENCES `puretherapie`.`ClientArrival` (`idClientArrival`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_technician`
    FOREIGN KEY (`idTechnician`)
    REFERENCES `puretherapie`.`Technician` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`TimeSlot`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`TimeSlot` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`TimeSlot` (
  `idTimeSlot` INT NOT NULL AUTO_INCREMENT,
  `day` DATE NOT NULL,
  `begin` TIME NOT NULL,
  `duration` SMALLINT NOT NULL,
  `free` TINYINT(1) NOT NULL DEFAULT 0,
  `idTechnician` INT NOT NULL,
  `idAppointment` INT NOT NULL,
  PRIMARY KEY (`idTimeSlot`),
  INDEX `fk_time_slot_technician` (`idTechnician` ASC) VISIBLE,
  INDEX `fk_time_slot_appointment` (`idAppointment` ASC) VISIBLE,
  CONSTRAINT `fk_time_slot_technician`
    FOREIGN KEY (`idTechnician`)
    REFERENCES `puretherapie`.`Technician` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_time_slot_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`GlobalOpeningTime`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`GlobalOpeningTime` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`GlobalOpeningTime` (
  `idGlobalOpeningTime` INT NOT NULL AUTO_INCREMENT,
  `dayNumber` TINYINT UNSIGNED NOT NULL,
  `openingTime` TIME NOT NULL,
  `closeTime` TIME NOT NULL,
  PRIMARY KEY (`idGlobalOpeningTime`));


-- -----------------------------------------------------
-- Table `puretherapie`.`ExceptionalClose`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`ExceptionalClose` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`ExceptionalClose` (
  `idExceptionalClose` INT NOT NULL AUTO_INCREMENT,
  `day` DATE NOT NULL,
  PRIMARY KEY (`idExceptionalClose`),
  UNIQUE INDEX `uq_exceptional_close_day` (`day` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`ExceptionalOpening`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`ExceptionalOpening` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`ExceptionalOpening` (
  `idExceptionalOpening` INT NOT NULL AUTO_INCREMENT,
  `day` DATE NOT NULL,
  `openingTime` TIME NOT NULL,
  `closeTime` TIME NOT NULL,
  PRIMARY KEY (`idExceptionalOpening`));


-- -----------------------------------------------------
-- Table `puretherapie`.`ClientAbsence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`ClientAbsence` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`ClientAbsence` (
  `idClientAbsence` INT NOT NULL AUTO_INCREMENT,
  `level` TINYINT UNSIGNED NOT NULL,
  `idClient` INT NOT NULL,
  `idAppointment` INT NOT NULL,
  PRIMARY KEY (`idClientAbsence`),
  INDEX `fk_client_absence_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_client_absence_appointment` (`idAppointment` ASC) VISIBLE,
  CONSTRAINT `fk_client_absence_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_client_absence_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Sponsorship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Sponsorship` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Sponsorship` (
  `idSponsorship` INT NOT NULL AUTO_INCREMENT,
  `idClientSponsored` INT NOT NULL,
  `idClientSponsor` INT NOT NULL,
  `date` DATE NOT NULL,
  `sponsoredUsed` TINYINT NOT NULL DEFAULT 0,
  `sponsorUsed` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idSponsorship`),
  INDEX `fk_sponsorship_client_sponsored` (`idClientSponsored` ASC) VISIBLE,
  INDEX `fk_sponsorship_client_sponsor` (`idClientSponsor` ASC) VISIBLE,
  CONSTRAINT `fk_sponsorship_client_sponsored`
    FOREIGN KEY (`idClientSponsored`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sponsorship_client_sponsor`
    FOREIGN KEY (`idClientSponsor`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`TechnicianAbsence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`TechnicianAbsence` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`TechnicianAbsence` (
  `idTechnicianAbsence` INT NOT NULL AUTO_INCREMENT,
  `day` DATE NOT NULL,
  `beginTime` TIME NOT NULL,
  `endTime` TIME NOT NULL,
  `idTechnician` INT NOT NULL,
  PRIMARY KEY (`idTechnicianAbsence`),
  INDEX `fk_technician_absence_technician` (`idTechnician` ASC) VISIBLE,
  CONSTRAINT `fk_technician_absence_technician`
    FOREIGN KEY (`idTechnician`)
    REFERENCES `puretherapie`.`Technician` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AestheticCareProvision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AestheticCareProvision` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AestheticCareProvision` (
  `idAestheticCareProvision` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `idClient` INT NOT NULL,
  `idAppointment` INT NULL,
  `idTechnician` INT NOT NULL,
  `idAestheticCare` INT NOT NULL,
  PRIMARY KEY (`idAestheticCareProvision`),
  INDEX `fk_aesthetic_care_provision_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_aesthetic_care_provision_appointment` (`idAppointment` ASC) VISIBLE,
  INDEX `fk_aesthetic_care_provision_technician` (`idTechnician` ASC) VISIBLE,
  INDEX `fk_aesthetic_care_provision_aesthetic_care` (`idAestheticCare` ASC) VISIBLE,
  UNIQUE INDEX `idAppointment_UNIQUE` (`idAppointment` ASC) VISIBLE,
  CONSTRAINT `fk_aesthetic_care_provision_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aesthetic_care_provision_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aesthetic_care_provision_technician`
    FOREIGN KEY (`idTechnician`)
    REFERENCES `puretherapie`.`Technician` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aesthetic_care_provision_aesthetic_care`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`ClientDelay`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`ClientDelay` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`ClientDelay` (
  `idClientDelay` INT NOT NULL AUTO_INCREMENT,
  `delayTime` TINYINT UNSIGNED NOT NULL,
  `idAppointment` INT NOT NULL,
  `idClient` INT NOT NULL,
  PRIMARY KEY (`idClientDelay`),
  INDEX `fk_client_delay_appointment` (`idAppointment` ASC) VISIBLE,
  INDEX `fk_client_delay_client` (`idClient` ASC) VISIBLE,
  CONSTRAINT `fk_client_delay_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_client_delay_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Note`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Note` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Note` (
  `idNote` INT NOT NULL AUTO_INCREMENT,
  `note` MEDIUMTEXT NOT NULL,
  `level` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idNote`));


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationClientNote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationClientNote` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationClientNote` (
  `idAssociationClientNote` INT NOT NULL AUTO_INCREMENT,
  `idClient` INT NOT NULL,
  `idNote` INT NOT NULL,
  PRIMARY KEY (`idAssociationClientNote`),
  INDEX `fk_association_client_note_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_association_client_note_note` (`idNote` ASC) VISIBLE,
  UNIQUE INDEX `uq_client_note` (`idClient` ASC, `idNote` ASC) VISIBLE,
  CONSTRAINT `fk_association_client_note_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_client_note_note`
    FOREIGN KEY (`idNote`)
    REFERENCES `puretherapie`.`Note` (`idNote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationAppointmentNote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationAppointmentNote` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationAppointmentNote` (
  `idAssociationAppointmentNote` INT NOT NULL AUTO_INCREMENT,
  `idAppointment` INT NOT NULL,
  `idNote` INT NOT NULL,
  PRIMARY KEY (`idAssociationAppointmentNote`),
  INDEX `fk_association_appointment_note_appointment` (`idAppointment` ASC) VISIBLE,
  INDEX `fk_association_appointment_note_note` (`idNote` ASC) VISIBLE,
  UNIQUE INDEX `uq_note_appointment` (`idAppointment` ASC, `idNote` ASC) VISIBLE,
  CONSTRAINT `fk_association_appointment_note_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_appointment_note_note`
    FOREIGN KEY (`idNote`)
    REFERENCES `puretherapie`.`Note` (`idNote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`HistoricalLevel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`HistoricalLevel` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`HistoricalLevel` (
  `idHistoricalLevel` INT NOT NULL AUTO_INCREMENT,
  `historicalLevelName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idHistoricalLevel`),
  UNIQUE INDEX `histocialLevelName_UNIQUE` (`historicalLevelName` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Historical`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Historical` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Historical` (
  `idHistorical` INT NOT NULL AUTO_INCREMENT,
  `type` TINYINT UNSIGNED NOT NULL DEFAULT 0,
  `historicalTitle` VARCHAR(125) NOT NULL,
  `text` TINYTEXT NOT NULL,
  `idHistoricalLevel` INT NOT NULL,
  `creationDate` DATETIME NOT NULL,
  PRIMARY KEY (`idHistorical`),
  INDEX `fk_histotical_historical_level` (`idHistoricalLevel` ASC) VISIBLE,
  CONSTRAINT `fk_notification_notification_level`
    FOREIGN KEY (`idHistoricalLevel`)
    REFERENCES `puretherapie`.`HistoricalLevel` (`idHistoricalLevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`HistoricalView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`HistoricalView` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`HistoricalView` (
  `idHistoricalView` INT NOT NULL AUTO_INCREMENT,
  `viewed` TINYINT UNSIGNED NOT NULL DEFAULT 0,
  `idHistorical` INT NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`idHistoricalView`),
  INDEX `fk_historical_view_historical` (`idHistorical` ASC) VISIBLE,
  INDEX `fk_historical_view_user` (`idUser` ASC) VISIBLE,
  CONSTRAINT `fk_notification_view_notification`
    FOREIGN KEY (`idHistorical`)
    REFERENCES `puretherapie`.`Historical` (`idHistorical`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_view_user`
    FOREIGN KEY (`idUser`)
    REFERENCES `puretherapie`.`User` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`SessionPurchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`SessionPurchase` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`SessionPurchase` (
  `idSessionPurchase` INT NOT NULL AUTO_INCREMENT,
  `used` TINYINT UNSIGNED NOT NULL DEFAULT 0,
  `idAestheticCare` INT NOT NULL,
  `idClient` INT NOT NULL,
  `idBill` INT NOT NULL,
  PRIMARY KEY (`idSessionPurchase`),
  INDEX `fk_session_purchase_aesthetic_care` (`idAestheticCare` ASC) VISIBLE,
  INDEX `fk_fk_session_purchase_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_session_purchase_bill` (`idBill` ASC) VISIBLE,
  CONSTRAINT `fk_session_purchase_aesthetic_care`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fk_session_purchase_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_purchase_bill`
    FOREIGN KEY (`idBill`)
    REFERENCES `puretherapie`.`Bill` (`idBill`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Sms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Sms` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Sms` (
  `idSms` INT NOT NULL,
  `name` VARCHAR(30) NOT NULL,
  `formattedText` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idSms`),
  UNIQUE INDEX `uq_sms_name` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`LaunchBreak`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`LaunchBreak` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`LaunchBreak` (
  `idLaunchBreak` INT NOT NULL AUTO_INCREMENT,
  `day` DATE NOT NULL,
  `duration` TINYINT UNSIGNED NOT NULL,
  `beginHour` TIME NOT NULL,
  `idTechnician` INT NOT NULL,
  PRIMARY KEY (`idLaunchBreak`),
  INDEX `fk_launch_break_technician` (`idTechnician` ASC) VISIBLE,
  UNIQUE INDEX `uq_launch_break_day` (`day` ASC, `idTechnician` ASC) VISIBLE,
  CONSTRAINT `fk_launch_break_technician`
    FOREIGN KEY (`idTechnician`)
    REFERENCES `puretherapie`.`Technician` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`WaitingRoom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`WaitingRoom` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`WaitingRoom` (
  `idWaitingRoom` INT NOT NULL AUTO_INCREMENT,
  `arrivalDate` DATETIME NOT NULL,
  `appointmentTime` TIME NULL,
  `idClient` INT NOT NULL,
  `idAppointment` INT NULL,
  PRIMARY KEY (`idWaitingRoom`),
  INDEX `fk_waiting_room_client` (`idClient` ASC) VISIBLE,
  INDEX `fk_waiting_room_appointment` (`idAppointment` ASC) VISIBLE,
  UNIQUE INDEX `uq_wr_client_appointment` (`idClient` ASC, `idAppointment` ASC) VISIBLE,
  UNIQUE INDEX `uq_wr_client` (`idClient` ASC) VISIBLE,
  UNIQUE INDEX `uq_wr_appointment` (`idAppointment` ASC) VISIBLE,
  CONSTRAINT `fk_waiting_room_client`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_waiting_room_appointment`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationBundleAestheticCarePackage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationBundleAestheticCarePackage` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationBundleAestheticCarePackage` (
  `idBundle` INT NOT NULL,
  `idAestheticCarePackage` INT NOT NULL,
  PRIMARY KEY (`idBundle`, `idAestheticCarePackage`),
  INDEX `fk_association_aesthetic_care_package` (`idAestheticCarePackage` ASC) VISIBLE,
  INDEX `fk_association_bundle` (`idBundle` ASC) VISIBLE,
  CONSTRAINT `fk_association_bundle`
    FOREIGN KEY (`idBundle`)
    REFERENCES `puretherapie`.`Bundle` (`idBundle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_aesthetic_care_package`
    FOREIGN KEY (`idAestheticCarePackage`)
    REFERENCES `puretherapie`.`AestheticCarePackage` (`idAestheticCarePackage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Role` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Role` (
  `idRole` INT NOT NULL AUTO_INCREMENT,
  `roleName` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idRole`),
  UNIQUE INDEX `uq_role_name` (`roleName` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Authority`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Authority` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Authority` (
  `idAuthority` INT NOT NULL AUTO_INCREMENT,
  `authorityName` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`idAuthority`),
  UNIQUE INDEX `uq_authority_name` (`authorityName` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationRoleAuthority`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationRoleAuthority` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationRoleAuthority` (
  `idRole` INT NOT NULL,
  `idAuthority` INT NOT NULL,
  PRIMARY KEY (`idRole`, `idAuthority`),
  INDEX `fk_association_role_authority_authority` (`idAuthority` ASC) VISIBLE,
  INDEX `fk_association_role_authority_role` (`idRole` ASC) VISIBLE,
  CONSTRAINT `fk_association_role_authority_role`
    FOREIGN KEY (`idRole`)
    REFERENCES `puretherapie`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_role_authority_authority`
    FOREIGN KEY (`idAuthority`)
    REFERENCES `puretherapie`.`Authority` (`idAuthority`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationUserRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationUserRole` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationUserRole` (
  `idPerson` INT NOT NULL,
  `idRole` INT NOT NULL,
  PRIMARY KEY (`idPerson`, `idRole`),
  INDEX `fk_association_user_role_role` (`idRole` ASC) VISIBLE,
  INDEX `fk_association_user_role_user` (`idPerson` ASC) VISIBLE,
  CONSTRAINT `fk_association_user_role_user`
    FOREIGN KEY (`idPerson`)
    REFERENCES `puretherapie`.`User` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_user_role_role`
    FOREIGN KEY (`idRole`)
    REFERENCES `puretherapie`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`AssociationRoleHistoricalLevel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`AssociationRoleHistoricalLevel` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`AssociationRoleHistoricalLevel` (
  `idRole` INT NOT NULL,
  `idHistoricalLevel` INT NOT NULL,
  PRIMARY KEY (`idRole`, `idHistoricalLevel`),
  INDEX `fk_association_role_notif_level_not_level` (`idHistoricalLevel` ASC) VISIBLE,
  INDEX `fk_association_role_notif_level_role` (`idRole` ASC) VISIBLE,
  CONSTRAINT `fk_association_role_notif_level_role`
    FOREIGN KEY (`idRole`)
    REFERENCES `puretherapie`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_association_role_notif_level_not_level`
    FOREIGN KEY (`idHistoricalLevel`)
    REFERENCES `puretherapie`.`HistoricalLevel` (`idHistoricalLevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`TimeSlotAtom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`TimeSlotAtom` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`TimeSlotAtom` (
  `idTimeSlotAtom` INT NOT NULL AUTO_INCREMENT,
  `numberOfMinutes` TINYINT UNSIGNED NOT NULL,
  `effectiveDate` DATE NOT NULL,
  PRIMARY KEY (`idTimeSlotAtom`),
  UNIQUE INDEX `effectiveDate_UNIQUE` (`effectiveDate` DESC) VISIBLE);


-- -----------------------------------------------------
-- Table `puretherapie`.`Surbooking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`Surbooking` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`Surbooking` (
  `idSurbooking` INT NOT NULL AUTO_INCREMENT,
  `idClient` INT NOT NULL,
  `idAestheticCare` INT NOT NULL,
  `idClientArrival` INT NULL,
  `canceled` TINYINT(1) NOT NULL DEFAULT 0,
  `day` DATE NOT NULL,
  `time` TIME NOT NULL,
  `finalized` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idSurbooking`),
  INDEX `fk_Surbooking_Client1_idx` (`idClient` ASC) VISIBLE,
  INDEX `fk_Surbooking_ClientArrival1_idx` (`idClientArrival` ASC) VISIBLE,
  INDEX `fk_Surbooking_AestheticCare1_idx` (`idAestheticCare` ASC) VISIBLE,
  CONSTRAINT `fk_Surbooking_Client1`
    FOREIGN KEY (`idClient`)
    REFERENCES `puretherapie`.`Client` (`idPerson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Surbooking_ClientArrival1`
    FOREIGN KEY (`idClientArrival`)
    REFERENCES `puretherapie`.`ClientArrival` (`idClientArrival`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Surbooking_AestheticCare1`
    FOREIGN KEY (`idAestheticCare`)
    REFERENCES `puretherapie`.`AestheticCare` (`idAestheticCare`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `puretherapie`.`SmsSent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puretherapie`.`SmsSent` ;

CREATE TABLE IF NOT EXISTS `puretherapie`.`SmsSent` (
  `idSmsSent` INT NOT NULL AUTO_INCREMENT,
  `idAppointment` INT NOT NULL,
  `idSms` INT NOT NULL,
  PRIMARY KEY (`idSmsSent`),
  INDEX `fk_SmsSent_Appointment1_idx` (`idAppointment` ASC) VISIBLE,
  INDEX `fk_SmsSent_Sms1_idx` (`idSms` ASC) VISIBLE,
  CONSTRAINT `fk_SmsSent_Appointment1`
    FOREIGN KEY (`idAppointment`)
    REFERENCES `puretherapie`.`Appointment` (`idAppointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SmsSent_Sms1`
    FOREIGN KEY (`idSms`)
    REFERENCES `puretherapie`.`Sms` (`idSms`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SET SQL_MODE = '';
DROP USER IF EXISTS 'PureTherapie_super_admin'@'%';
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'PureTherapie_super_admin'@'%' IDENTIFIED BY 'zIWEFYofy9senbrYj1T2Fc1dP';

GRANT ALL ON TABLE `puretherapie`.`AestheticCare` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AestheticCarePackage` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AestheticCareProvision` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Bundle` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`BundlePurchase` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Appointment` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationAppointmentNote` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationClientNote` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Bill` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Client` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientAbsence` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientArrival` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientDelay` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`ExceptionalClose` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`ExceptionalOpening` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`GlobalOpeningTime` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`LaunchBreak` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Note` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Historical` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`HistoricalView` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Payment` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`PaymentType` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Person` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`PersonOrigin` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`SessionPurchase` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Sms` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Sponsorship` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Stock` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Technician` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`TechnicianAbsence` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`TimeSlot` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`User` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`WaitingRoom` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationBundleAestheticCarePackage` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Role` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Authority` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationRoleAuthority` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationUserRole` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`HistoricalLevel` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationRoleHistoricalLevel` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`TimeSlotAtom` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`MeansOfPayment` TO 'PureTherapie_super_admin'@'%';
GRANT ALL ON TABLE `puretherapie`.`Surbooking` TO 'PureTherapie_super_admin'@'%';
SET SQL_MODE = '';
DROP USER IF EXISTS 'PureTherapie_spring_user'@'%';
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'PureTherapie_spring_user'@'%' IDENTIFIED BY 'Rb0Ijhy2Ze6EkE5GmGRsRYTy2';

GRANT ALL ON TABLE `puretherapie`.`AestheticCare` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AestheticCarePackage` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AestheticCareProvision` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Bundle` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`BundlePurchase` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Appointment` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationAppointmentNote` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationClientNote` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Bill` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Client` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientAbsence` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientArrival` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`ClientDelay` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`ExceptionalClose` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`ExceptionalOpening` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`GlobalOpeningTime` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`LaunchBreak` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Note` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Historical` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`HistoricalView` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Payment` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`PaymentType` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Person` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`PersonOrigin` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`SessionPurchase` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Sms` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Sponsorship` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Stock` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Technician` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`TechnicianAbsence` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`TimeSlot` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`User` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`WaitingRoom` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationBundleAestheticCarePackage` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Role` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Authority` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationRoleAuthority` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationUserRole` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`HistoricalLevel` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`AssociationRoleHistoricalLevel` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`TimeSlotAtom` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`MeansOfPayment` TO 'PureTherapie_spring_user'@'%';
GRANT ALL ON TABLE `puretherapie`.`Surbooking` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, SELECT, INSERT, UPDATE ON TABLE `puretherapie`.`AestheticCare` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`AestheticCarePackage` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT ON TABLE `puretherapie`.`AestheticCareProvision` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE `puretherapie`.`Bundle` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, INSERT ON TABLE `puretherapie`.`BundlePurchase` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, UPDATE, SELECT ON TABLE `puretherapie`.`Appointment` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE `puretherapie`.`AssociationAppointmentNote` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`AssociationClientNote` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT ON TABLE `puretherapie`.`Bill` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, INSERT ON TABLE `puretherapie`.`Client` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, SELECT, UPDATE, INSERT ON TABLE `puretherapie`.`ClientAbsence` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT ON TABLE `puretherapie`.`ClientArrival` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`ClientDelay` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE `puretherapie`.`ExceptionalClose` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE `puretherapie`.`ExceptionalOpening` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT, DELETE ON TABLE `puretherapie`.`GlobalOpeningTime` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, SELECT, UPDATE, INSERT ON TABLE `puretherapie`.`LaunchBreak` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, SELECT, INSERT, UPDATE ON TABLE `puretherapie`.`Note` TO 'PureTherapie_spring_user'@'%';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`Historical` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, DELETE, INSERT ON TABLE `puretherapie`.`HistoricalView` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, INSERT, UPDATE ON TABLE `puretherapie`.`Payment` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, INSERT, UPDATE ON TABLE `puretherapie`.`PaymentType` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`Person` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`PersonOrigin` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, INSERT, UPDATE ON TABLE `puretherapie`.`SessionPurchase` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE `puretherapie`.`Sms` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`Sponsorship` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`Stock` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`Technician` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`TechnicianAbsence` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`TimeSlot` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE ON TABLE `puretherapie`.`User` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT, DELETE ON TABLE `puretherapie`.`WaitingRoom` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, DELETE, INSERT ON TABLE `puretherapie`.`AssociationBundleAestheticCarePackage` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, INSERT, DELETE, SELECT ON TABLE `puretherapie`.`Role` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT, DELETE ON TABLE `puretherapie`.`Authority` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, DELETE, INSERT ON TABLE `puretherapie`.`AssociationUserRole` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE `puretherapie`.`AssociationRoleAuthority` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE `puretherapie`.`HistoricalLevel` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE `puretherapie`.`AssociationRoleHistoricalLevel` TO 'PureTherapie_spring_user'@'%';
GRANT UPDATE, SELECT, INSERT ON TABLE `puretherapie`.`TimeSlotAtom` TO 'PureTherapie_spring_user'@'%';
GRANT SELECT ON TABLE `puretherapie`.`MeansOfPayment` TO 'PureTherapie_spring_user'@'%';
GRANT INSERT, SELECT, UPDATE ON TABLE `puretherapie`.`Surbooking` TO 'PureTherapie_spring_user'@'%';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
